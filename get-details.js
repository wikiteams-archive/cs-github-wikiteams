// Generated by CoffeeScript 1.6.1
(function() {
  var cheerio, getStats, saveStats, sortStats, stats, utils;

  cheerio = require('cheerio');

  utils = require('./utils');

  stats = {};

  getStats = function(html, url) {
    var $, byProp, getFollowers, getInt, getOrgName, pageDesc, userStats, _ref, _ref1;
    $ = cheerio.load(html);
    byProp = function(field) {
      return $("[itemprop='" + field + "']");
    };
    getInt = function(text) {
      return parseInt(text.replace(',', ''));
    };
    getOrgName = function(index, item) {
      return $(item).attr('title');
    };
    getFollowers = function() {
      var multiplier, text;
      text = $('.stats li:nth-child(1) a').text().trim();
      multiplier = text.indexOf('k') > 0 ? 1000 : 1;
      return (parseFloat(text)) * multiplier;
    };
    pageDesc = $('meta[name="description"]').attr('content');
    userStats = {
      name: byProp('name').text().trim(),
      login: byProp('additionalName').text().trim(),
      location: byProp('homeLocation').text().trim(),
      language: (_ref = (_ref1 = /\sin ([\w-]+)/.exec(pageDesc)) != null ? _ref1[1] : void 0) != null ? _ref : '',
      gravatar: byProp('image').attr('href'),
      followers: getFollowers(),
      organizations: $('.orgs li > a').map(getOrgName),
      contributions: getInt($('.contrib-day > .num').text()),
      contributionsStreak: getInt($('.contrib-streak > .num').text()),
      contributionsCurrentStreak: getInt($('.contrib-streak-current > .num').text())
    };
    stats[userStats.login] = userStats;
    return userStats;
  };

  sortStats = function(stats) {
    var minContributions;
    minContributions = 1;
    return Object.keys(stats).filter(function(login) {
      return stats[login].contributions >= minContributions;
    }).sort(function(a, b) {
      return stats[b].contributions - stats[a].contributions;
    }).map(function(login) {
      return stats[login];
    });
  };

  saveStats = function() {
    var logins, urls;
    logins = require('./temp-logins.json');
    urls = logins.map(function(login) {
      return "https://github.com/" + login;
    });
    return utils.batchGet(urls, getStats, function() {
      return utils.writeStats('./raw/github-users-stats.json', sortStats(stats));
    });
  };

  saveStats();

}).call(this);
